// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VueDotNetCoreMySql.Data;

namespace VueDotNetCoreMySql.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("VueDotNetCoreMySql.Common.Entities.Role", b =>
                {
                    b.Property<short>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(50);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new { RoleId = (short)1, RoleName = "Super Admin" },
                        new { RoleId = (short)2, RoleName = "Admin" },
                        new { RoleId = (short)3, RoleName = "User" }
                    );
                });

            modelBuilder.Entity("VueDotNetCoreMySql.Common.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2020, 4, 10, 18, 27, 47, 957, DateTimeKind.Local));

                    b.Property<short>("IsActive");

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<short?>("RoleId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = 1, Created = new DateTime(2020, 4, 10, 15, 27, 48, 426, DateTimeKind.Utc), IsActive = (short)1, Password = "admin", UserName = "admin" },
                        new { UserId = 2, Created = new DateTime(2020, 4, 10, 15, 27, 48, 426, DateTimeKind.Utc), IsActive = (short)1, Password = "test", UserName = "test" }
                    );
                });

            modelBuilder.Entity("VueDotNetCoreMySql.Common.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { UserRoleId = 1, RoleId = (short)1, UserId = 1 },
                        new { UserRoleId = 2, RoleId = (short)2, UserId = 1 },
                        new { UserRoleId = 3, RoleId = (short)3, UserId = 2 }
                    );
                });

            modelBuilder.Entity("VueDotNetCoreMySql.Common.Entities.User", b =>
                {
                    b.HasOne("VueDotNetCoreMySql.Common.Entities.Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("VueDotNetCoreMySql.Common.Entities.UserRole", b =>
                {
                    b.HasOne("VueDotNetCoreMySql.Common.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VueDotNetCoreMySql.Common.Entities.User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
